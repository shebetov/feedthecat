{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\alex2\\\\Desktop\\\\mobilki_lr1\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { Component, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Share from \"react-native-web/dist/exports/Share\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#000',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  avatar_image: {\n    flex: 1,\n    width: 250,\n    height: 250,\n    resizeMode: 'contain'\n  },\n  counter_text: {\n    color: '#fff',\n    paddingTop: 20\n  },\n  feed_button: {\n    paddingTop: 20\n  }\n});\n\nvar getResults = function getResults() {\n  var value;\n  return _regeneratorRuntime.async(function getResults$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem('@results'));\n\n        case 3:\n          value = _context.sent;\n\n          if (!(value !== null)) {\n            _context.next = 6;\n            break;\n          }\n\n          return _context.abrupt(\"return\", JSON.parse(value));\n\n        case 6:\n          return _context.abrupt(\"return\", []);\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](0);\n          return _context.abrupt(\"return\", []);\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 9]], Promise);\n};\n\nvar saveResults = function saveResults(results) {\n  return _regeneratorRuntime.async(function saveResults$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem('@results', JSON.stringify(results)));\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nawait saveResults([32, 1]);\nvar results = await getResults();\n\nvar PlayScreen = function (_Component) {\n  _inherits(PlayScreen, _Component);\n\n  var _super = _createSuper(PlayScreen);\n\n  function PlayScreen(props) {\n    var _this;\n\n    _classCallCheck(this, PlayScreen);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isShowing: false,\n      count: 0\n    };\n    return _this;\n  }\n\n  _createClass(PlayScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }\n      }, !this.state.isShowing && React.createElement(Image, {\n        styles: styles.avatar_image,\n        source: require(\"./wait.jpg\"),\n        fadeDuration: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 44\n        }\n      }), this.state.isShowing && React.createElement(Image, {\n        styles: styles.avatar_image,\n        source: require(\"./eat.gif\"),\n        fadeDuration: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 43\n        }\n      }), React.createElement(Button, {\n        title: \"\\u0414\\u0430\\u0442\\u044C \\u0412\\u0438\\u0441\\u043A\\u0430\\u0441\",\n        style: styles.feed_button,\n        onPress: function onPress() {\n          _this2.setState({\n            count: _this2.state.count + 1\n          });\n\n          if ((_this2.state.count + 1) % 10 == 0) {\n            _this2.setState({\n              isShowing: true\n            });\n\n            setTimeout(function () {\n              _this2.setState({\n                isShowing: false\n              });\n            }, 1500);\n          }\n\n          if (results.length === 0) {\n            results.push([new Date().toISOString(), 0]);\n          }\n\n          results[-1] = [new Date().toISOString(), _this2.state.count];\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }\n      }), React.createElement(Text, {\n        style: styles.counter_text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }\n      }, \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0436\\u0435\\u043D\\u043E \\u0432\\u0438\\u0441\\u043A\\u0430\\u0441\\u043E\\u0432: \", this.state.count, \" \\u0448\\u0442\\u0443\\u043A.\"), React.createElement(Button, {\n        title: \"\\u041F\\u043E\\u0434\\u0435\\u043B\\u0438\\u0442\\u044C\\u0441\\u044F \\u0440\\u0435\\u0437\\u0443\\u043B\\u044C\\u0442\\u0430\\u0442\\u043E\\u043C\",\n        onPress: function onPress() {\n          return Share.share({\n            'message': 'Мой результат: ' + _this2.state.count.toString()\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }\n      }), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }\n      }, results.toString()));\n    }\n  }]);\n\n  return PlayScreen;\n}(Component);\n\nfunction AboutScreen() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, \"\\u0429\\u0435\\u0431\\u0435\\u0442\\u043E\\u0432 981063\"));\n}\n\nvar Tab = createBottomTabNavigator();\nexport default function App() {\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, React.createElement(Tab.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"\\u0418\\u0433\\u0440\\u0430\\u0442\\u044C\",\n    component: PlayScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"\\u041E \\u0440\\u0430\\u0437\\u0440\\u0430\\u0431\\u043E\\u0442\\u0447\\u0438\\u043A\\u0435\",\n    component: AboutScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/alex2/Desktop/mobilki_lr1/App.js"],"names":["React","Component","useState","NavigationContainer","createBottomTabNavigator","AsyncStorage","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","avatar_image","width","height","resizeMode","counter_text","color","paddingTop","feed_button","getResults","getItem","value","JSON","parse","saveResults","results","setItem","stringify","PlayScreen","props","state","isShowing","count","require","setState","setTimeout","length","push","Date","toISOString","Share","share","toString","AboutScreen","Tab","App"],"mappings":"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","sourcesContent":["import React, {Component, useState} from 'react';\nimport { StyleSheet, Text, View, Image, Button, Share } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\n\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#000',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    avatar_image: {\n        flex: 1,\n        width: 250,\n        height: 250,\n        resizeMode: 'contain',\n    },\n    counter_text: {\n        color: '#fff',\n        paddingTop: 20\n    },\n    feed_button: {\n        paddingTop: 20\n    }\n});\n\n\n\nconst getResults = async () => {\n    try {\n        const value = await AsyncStorage.getItem('@results')\n        if(value !== null) {\n            return JSON.parse(value);\n        }\n        return [];\n    } catch(e) {\n        return [];\n    }\n}\n\nconst saveResults = async (results) => {\n    await AsyncStorage.setItem('@results', JSON.stringify(results));\n}\n\nawait saveResults([32, 1]);\nlet results = await getResults();\n\n\nclass PlayScreen extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isShowing: false,\n            count: 0\n        };\n    }\n\n    render() {\n        return (\n            <View style={styles.container}>\n\n                { !this.state.isShowing && <Image styles={styles.avatar_image} source={require('./wait.jpg')} fadeDuration={0} /> }\n                { this.state.isShowing && <Image styles={styles.avatar_image} source={require('./eat.gif')} fadeDuration={0} /> }\n\n\n                <Button\n                    title=\"Дать Вискас\"\n                    style={styles.feed_button}\n                    onPress={() => {\n                        this.setState({ count: this.state.count + 1 });\n                        if ((this.state.count + 1) % 10 == 0) {\n                            this.setState({ isShowing: true })\n                            setTimeout(() => {this.setState({ isShowing: false })}, 1500);\n                        }\n\n                        if (results.length === 0) {\n                            results.push([(new Date().toISOString()), 0]);\n                        }\n\n                        results[-1] = [(new Date().toISOString()), this.state.count];\n                    }}\n                />\n                <Text style={styles.counter_text}>Загружено вискасов: { this.state.count } штук.</Text>\n                <Button title=\"Поделиться результатом\" onPress={() => Share.share({'message': 'Мой результат: ' + this.state.count.toString()})} />\n                <Text>{results.toString()}</Text>\n            </View>\n        );\n    }\n}\n\nfunction AboutScreen() {\n    return (\n        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n            <Text>Щебетов 981063</Text>\n        </View>\n    );\n}\n\n\nconst Tab = createBottomTabNavigator();\n\nexport default function App() {\n    return (\n        <NavigationContainer>\n            <Tab.Navigator>\n                <Tab.Screen name=\"Играть\" component={PlayScreen} />\n                <Tab.Screen name=\"О разработчике\" component={AboutScreen} />\n            </Tab.Navigator>\n        </NavigationContainer>\n    );\n}\n\n\n"]},"metadata":{},"sourceType":"module"}