{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\alex2\\\\Desktop\\\\mobilki_lr1\\\\App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Share from \"react-native-web/dist/exports/Share\";\nimport AppState from \"react-native-web/dist/exports/AppState\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#000',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  avatar_image: {\n    flex: 1,\n    width: 250,\n    height: 250,\n    resizeMode: 'contain'\n  },\n  counter_text: {\n    color: '#fff',\n    paddingTop: 20,\n    flexDirection: 'column'\n  },\n  feed_button: {\n    paddingTop: 20\n  },\n  color_white: {\n    color: '#fff'\n  }\n});\n\nvar PlayScreen = function (_Component) {\n  _inherits(PlayScreen, _Component);\n\n  var _super = _createSuper(PlayScreen);\n\n  function PlayScreen(props) {\n    var _this;\n\n    _classCallCheck(this, PlayScreen);\n\n    _this = _super.call(this, props);\n\n    _this.formatDate = function (dt) {\n      return dt.getDay().toString() + \".\" + dt.getMonth().toString() + '.' + dt.getFullYear().toString() + ' ' + dt.getHours().toString() + ':' + dt.getMinutes().toString() + ':' + dt.getSeconds().toString();\n    };\n\n    _this.saveData = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('scoreboard', JSON.stringify(_this.state.scoreboard)));\n\n            case 3:\n              _context.next = 8;\n              break;\n\n            case 5:\n              _context.prev = 5;\n              _context.t0 = _context[\"catch\"](0);\n              alert('Failed to save the data to the storage');\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 5]], Promise);\n    };\n\n    _this.readData = function _callee2() {\n      var val, curr_date_str;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.t0 = JSON;\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('scoreboard'));\n\n            case 4:\n              _context2.t1 = _context2.sent;\n              val = _context2.t0.parse.call(_context2.t0, _context2.t1);\n              curr_date_str = _this.formatDate(new Date());\n\n              if (val !== null) {\n                val.push([curr_date_str, 0]);\n              } else {\n                val = [[curr_date_str, 0]];\n              }\n\n              _this.setState({\n                scoreboard: val\n              });\n\n              _context2.next = 14;\n              break;\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t2 = _context2[\"catch\"](0);\n              alert('Failed to fetch the data from storage');\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 11]], Promise);\n    };\n\n    _this.onPress = function () {\n      _this.setState({\n        count: _this.state.count + 1\n      });\n\n      if ((_this.state.count + 1) % 10 == 0) {\n        _this.setState({\n          isShowing: true\n        });\n\n        setTimeout(function () {\n          _this.setState({\n            isShowing: false\n          });\n        }, 1500);\n      }\n\n      var results = _this.state.scoreboard;\n      results.splice(results.length - 1, 1, [_this.formatDate(new Date()), _this.state.count + 1]);\n\n      _this.setState({\n        scoreboard: results\n      });\n\n      _this.saveData();\n    };\n\n    _this.state = {\n      isShowing: false,\n      count: 0,\n      scoreboard: []\n    };\n    return _this;\n  }\n\n  _createClass(PlayScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.readData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }\n      }, !this.state.isShowing && React.createElement(Image, {\n        styles: styles.avatar_image,\n        source: require(\"./wait.jpg\"),\n        fadeDuration: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 44\n        }\n      }), this.state.isShowing && React.createElement(Image, {\n        styles: styles.avatar_image,\n        source: require(\"./eat.gif\"),\n        fadeDuration: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 43\n        }\n      }), React.createElement(Button, {\n        title: \"\\u0414\\u0430\\u0442\\u044C \\u0412\\u0438\\u0441\\u043A\\u0430\\u0441\",\n        style: styles.feed_button,\n        onPress: this.onPress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }\n      }), React.createElement(Text, {\n        style: styles.counter_text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }\n      }, \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0436\\u0435\\u043D\\u043E \\u0432\\u0438\\u0441\\u043A\\u0430\\u0441\\u043E\\u0432: \", this.state.count, \" \\u0448\\u0442\\u0443\\u043A.\"), React.createElement(Button, {\n        title: \"\\u041F\\u043E\\u0434\\u0435\\u043B\\u0438\\u0442\\u044C\\u0441\\u044F \\u0440\\u0435\\u0437\\u0443\\u043B\\u044C\\u0442\\u0430\\u0442\\u043E\\u043C\",\n        onPress: function onPress() {\n          return Share.share({\n            'message': 'Мой результат: ' + _this2.state.count.toString()\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: styles.counter_text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        key: \"title\",\n        style: styles.color_white,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }\n      }, \"\\u0420\\u0435\\u0437\\u0443\\u043B\\u044C\\u0442\\u0430\\u0442\\u044B:\"), this.state.scoreboard.map(function (item) {\n        return React.createElement(Text, {\n          key: item[0],\n          style: styles.color_white,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }\n        }, item[0].toString(), \" - \", item[1].toString());\n      })));\n    }\n  }]);\n\n  return PlayScreen;\n}(Component);\n\nfunction AboutScreen() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, \"\\u0429\\u0435\\u0431\\u0435\\u0442\\u043E\\u0432 981063\"));\n}\n\nvar Tab = createBottomTabNavigator();\nexport default function App() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      scoreboard = _useState2[0],\n      setScoreBoard = _useState2[1];\n\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, React.createElement(Tab.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"\\u0418\\u0433\\u0440\\u0430\\u0442\\u044C\",\n    component: PlayScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"\\u041E \\u0440\\u0430\\u0437\\u0440\\u0430\\u0431\\u043E\\u0442\\u0447\\u0438\\u043A\\u0435\",\n    component: AboutScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/alex2/Desktop/mobilki_lr1/App.js"],"names":["React","Component","useState","useEffect","NavigationContainer","createBottomTabNavigator","AsyncStorage","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","avatar_image","width","height","resizeMode","counter_text","color","paddingTop","flexDirection","feed_button","color_white","PlayScreen","props","formatDate","dt","getDay","toString","getMonth","getFullYear","getHours","getMinutes","getSeconds","saveData","setItem","JSON","stringify","state","scoreboard","alert","readData","getItem","val","parse","curr_date_str","Date","push","setState","onPress","count","isShowing","setTimeout","results","splice","length","require","Share","share","map","item","AboutScreen","Tab","App","setScoreBoard"],"mappings":"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","sourcesContent":["import React, {Component, useState, useEffect} from 'react';\nimport { StyleSheet, Text, View, Image, Button, Share, AppState } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { AsyncStorage } from 'react-native';\n\n\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#000',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    avatar_image: {\n        flex: 1,\n        width: 250,\n        height: 250,\n        resizeMode: 'contain',\n    },\n    counter_text: {\n        color: '#fff',\n        paddingTop: 20,\n        flexDirection: 'column'\n    },\n    feed_button: {\n        paddingTop: 20\n    },\n    color_white: {\n        color: '#fff'\n    }\n});\n\n\nclass PlayScreen extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isShowing: false,\n            count: 0,\n            scoreboard: []\n        };\n    }\n\n    componentDidMount() {\n        this.readData();\n    }\n\n    formatDate = (dt) => {\n        return dt.getDay().toString() + \".\" + dt.getMonth().toString() + '.' +  dt.getFullYear().toString() + ' ' + dt.getHours().toString() + ':' + dt.getMinutes().toString() + ':' + dt.getSeconds().toString();\n    }\n\n    saveData = async () => {\n        try {\n            await AsyncStorage.setItem('scoreboard', JSON.stringify(this.state.scoreboard));\n        } catch (e) {\n            alert('Failed to save the data to the storage')\n        }\n    }\n\n\n    readData = async () => {\n        try {\n            let val = JSON.parse(await AsyncStorage.getItem('scoreboard'));\n\n            let curr_date_str = this.formatDate(new Date());\n            if (val !== null) {\n                val.push([curr_date_str, 0]);\n            } else {\n                val = [[curr_date_str, 0]];\n            }\n            this.setState({scoreboard: val});\n        } catch (e) {\n            alert('Failed to fetch the data from storage')\n        }\n    }\n\n    onPress = () => {\n        this.setState({ count: this.state.count + 1 });\n        if ((this.state.count + 1) % 10 == 0) {\n            this.setState({ isShowing: true })\n            setTimeout(() => {this.setState({ isShowing: false })}, 1500);\n        }\n\n        let results = this.state.scoreboard;\n        results.splice(results.length - 1, 1, [this.formatDate(new Date()), this.state.count + 1]);\n        this.setState({scoreboard: results});\n        this.saveData();\n    }\n\n    render() {\n        return (\n            <View style={styles.container}>\n\n                { !this.state.isShowing && <Image styles={styles.avatar_image} source={require('./wait.jpg')} fadeDuration={0} /> }\n                { this.state.isShowing && <Image styles={styles.avatar_image} source={require('./eat.gif')} fadeDuration={0} /> }\n\n\n                <Button\n                    title=\"Дать Вискас\"\n                    style={styles.feed_button}\n                    onPress={this.onPress}\n                />\n                <Text style={styles.counter_text}>Загружено вискасов: { this.state.count } штук.</Text>\n                <Button title=\"Поделиться результатом\" onPress={() => Share.share({'message': 'Мой результат: ' + this.state.count.toString()})} />\n                <View style={styles.counter_text}>\n                    <Text key='title' style={styles.color_white}>Результаты:</Text>\n                    {this.state.scoreboard.map(item => (\n                        <Text key={item[0]} style={styles.color_white}>{item[0].toString()} - {item[1].toString()}</Text>\n                    ))}\n                </View>\n            </View>\n        );\n    }\n}\n\nfunction AboutScreen() {\n    return (\n        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n            <Text>Щебетов 981063</Text>\n        </View>\n    );\n}\n\n\nconst Tab = createBottomTabNavigator();\n\nexport default function App() {\n\n    const [scoreboard, setScoreBoard] = useState('');\n\n    //useEffect(() => {\n    //    readData()\n    //}, [])\n\n    return (\n        <NavigationContainer>\n            <Tab.Navigator>\n                <Tab.Screen name=\"Играть\" component={PlayScreen} />\n                <Tab.Screen name=\"О разработчике\" component={AboutScreen} />\n            </Tab.Navigator>\n        </NavigationContainer>\n    );\n}\n\n\n"]},"metadata":{},"sourceType":"module"}